version: '3.8'

services:

  api_gateway:
    build:
      context: ./api_gateway/
      dockerfile: Dockerfile
    container_name: api_gateway
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    depends_on:
      - tuzilastvo_service
      - auth_service
    networks:
      - network

  auth_service:
    image: auth_service
    container_name: auth_service
    build:
      context: .
      dockerfile: ./auth_service/Dockerfile
    restart: always
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}
    environment:
      AUTH_DB_HOST: ${AUTH_DB_HOST}
      AUTH_DB_PORT: ${AUTH_DB_PORT}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      SECRET_KEY: ${SECRET_KEY}
      JAEGER_ADDRESS: ${JAEGER_ADDRESS}
    depends_on:
      auth_db:
        condition: service_started
    networks:
      - network


  tuzilastvo_service:
    image: tuzilastvo_service
    container_name: tuzilastvo_service
    build:
      context: .
      dockerfile: ./tuzilastvo_service/Dockerfile
    restart: always
    ports:
      - ${TUZILASTVO_SERVICE_PORT}:${TUZILASTVO_SERVICE_PORT}
    environment:
      TUZILASTVO_DB_HOST: ${TUZILASTVO_DB_HOST}
      TUZILASTVO_DB_PORT: ${TUZILASTVO_DB_PORT}
      TUZILASTVO_SERVICE_PORT: ${TUZILASTVO_SERVICE_PORT}
      SECRET_KEY: ${SECRET_KEY}
      JAEGER_ADDRESS: ${JAEGER_ADDRESS}
    depends_on:
      tuzilastvo_db:
        condition: service_started
    networks:
      - network


  mup_service:
    image: mup_service
    container_name: mup_service
    build:
      context: .
      dockerfile: ./mup_service/Dockerfile
    restart: always
    ports:
      - ${MUP_SERVICE_PORT}:${MUP_SERVICE_PORT}
    environment:
      MUP_DB_HOST: ${MUP_DB_HOST}
      MUP_DB_PORT: ${MUP_DB_PORT}
      MUP_SERVICE_PORT: ${MUP_SERVICE_PORT}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      AUTH_SERVICE_HOST: ${AUTH_SERVICE_HOST}
      SECRET_KEY: ${SECRET_KEY}
      JAEGER_ADDRESS: ${JAEGER_ADDRESS}
    depends_on:
      mup_db:
        condition: service_started
    networks:
      - network

  tuzilastvo_db:
    image: mongo
    container_name: tuzilastvo_db
    restart: on-failure
    networks:
      - network

  mup_db:
    image: mongo
    container_name: mup_db
    restart: on-failure
    networks:
      - network

  auth_db:
    image: mongo
    container_name: auth_db
    restart: on-failure
    networks:
      - network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - network

networks:
  network:
    driver: bridge